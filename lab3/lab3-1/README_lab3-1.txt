
?Что такое word[ds:si], byte[bx] и т.д.? movsw: [ds:si]->[es:di]

Адресация [segment:offset], т.е. сегмент:смещение
Сегментные регистры: (обычно в контексте [segment:offset] означают адрес начала)
    Регистр CS (Code Segment - сегмент кода) 
        используется для хранения сегмента кода программы. 
        То есть в этом сегменте хранится код программы.
    Регистр DS (Data Segment - сегмент данных) 
        используется для хранения данных программы.
    Регистр SS (Stack Segment - сегмент стека) 
        используется для хранения сегмента стека.
    Регистр ES - дополнительный регистр, который может хранить адрес любого сегмента (например, видеобуфера). 
        Именно этот регистр наиболее часто используется в программах для работы с памятью.

Индексные регистры: (обычно в контексте [segment:offset] означают смещение от адреса сегмента)
    Регистр SI (Source Index)
        Является индексом источника и применяется для некоторых операций над строками (обычно связан с регистром DS);
    Регистр DI (Destination Index)
        Является индексом назначения и применяется так же для строковых операций (обычно связан с регистром ES).

byte - выводит первый байт, который содержится в регистре
word - вывод машинное слово (2 байта), которое содержится по адресу segment*16+offset.


?Почему в dh мы поместили 0xCE, а в dl 0x41?
Используем dx, потому что обычно это регистр данных
dx = 2 байт, т.е. 16 бит. Он состоит из dh и dl (data high, data low - старший и младший байты)
dx = 0xABCD, где dh = 0xAB, dl = 0xCD

Т.к. в лабе мы использовали dx для описания символа, то dh отвечает за яркость (alpha) + rgb (фона) + интенсивность (насыщенность цвета, чтобы вместо коричневого он выводил жёлтый) + rgb (текста), а dl отвечает за символ (по ASCII)
Итого в коде, dh = 0xCE = 1100 1110 = (alpha = 1, r = 1, g = 0, b = 0, т.е. фон красный яркий) + (интенсивность = 1, r = 1, g = 1, b = 0, т.е. текст жёлтый)
              dl = 0x41 = 'A'
